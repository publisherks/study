@charset "utf-8";
@use "sass:map";
@use "sass:list";

[class^="btn-"] {
    height: rem(34px);
    padding: 0 rem(24px);
    font-size: rem(14px);
    font-weight: 700;
    border-radius: rem(3px);
    outline: none;
    white-space: nowrap;
    transition: all .25s ease;

    &[class*="sm"] {
        font-size: rem(13px);
        height: rem(28px);
        padding: 0 rem(16px);
    }

    &[class*="lg"] {
        font-size: rem(16px);
        height: rem(48px);
    }

    &[class*="icon"]  {
        padding: 0 rem(9px);
        line-height: 1;

        i {
            margin-right: 0;
        }
    }

    i {
        font-size: rem(16px);
        margin-right: rem(6px);
    }
}


/* btn 클래스 리스트 */
$btns: (
    main : 'main',
    sub : 'secondary',
    cancel: 'cancel',
    delete: 'negative',
);

/*s
    btn 생성 mixin.
    ex)
    btn-main {
        color : var(--text-color1);
        bacground-color: var(--main-color);
        &:active {
            background-color: var(--main-color-active);
        }
    }
*/
@mixin btnsGenerate($btns : ()) {
    @each $key, $value in $btns {
        $i: index($btns, $key $value);

        [class^="btn-"] {
            &[class*="#{$key}"] {
                color: var(--text-btn);
                border: 1px solid var(--#{$value}-line);
                background-color: var(--#{$value});

                &:active {
                    background-color: var(--#{$value}-line);
                }

                &:disabled {
                    color: rgba(var(--RGB-text-btn), .5);
                    border-color: var(--#{$value});
                    background-color: var(--#{$value}-disabled);
                    cursor: not-allowed;
                }

                &.active {
                    color: var(--#{$value});
                    border: 2px solid var(--#{$value});
                    background-color: var(--bg-default);
                }
            }
        }
    }
}

@include btnsGenerate($btns);
